#read mobs.tin

#variable {LOOP} {FALSE}
#variable {AUTO_RESTART} {TRUE}
#variable {NEED_HP} {FALSE}
#variable {NEED_MP} {FALSE}

#variable {HP} {0}
#variable {MP} {0}
#variable {VP} {0}

#variable {FIRST_EXP} {0}

#variable {ASKED_FOR_HEAL} {FALSE}
#variable {CRITICAL_HP_PCT} {0.4}

#variable {FOLLOWING} {FALSE}
#variable {LEADING} {FALSE}

#variable {AT_XP_SWITCH_TO_LEVEL_GEAR} {20000}
#variable {SWITCHED_LEVEL_GEAR} {FALSE}

#action {A warm feeling floods your body.}
{
    #var ASKED_FOR_HEAL FALSE;
}

#variable WAITING_TO_KILL {};
#action {is rendered unconscious by your music!} {
    eq dagger;
    backstab $WAITING_TO_KILL;
    frep;
}

#variable {HAVE_UNCN} {FALSE};

#variable LAST_MOVE {};
#ticker {check-mover} {
    #format currenttime %T;
    #math {TIME_SINCE_MOVE} {$currenttime - $LAST_MOVE};
    #if {$TIME_SINCE_MOVE > 300} {
        rego;
        #bell;
        #showme Dormant for 5 minutes;
    }
} {300};

#alias {a}
{
    #if {"$KILL" == "TRUE" && ("$STATUS" == "READY")}
    {
        #if {"$NEED_HP" != "TRUE" && "$NEED_MP" != "TRUE"}
        {
            set-attacking;
            #if {"$CAN_BS" == "TRUE" && $MP > $COST_UNCN && "$HAVE_UNCN" == "FALSE"} {
                prep;
                #variable WAITING_TO_KILL {%1};
                uncn %1;
                #variable {HAVE_UNCN} {TRUE};
            };
            #else {
                kill %1;
            }
            stop-looker;
        };
        #ELSEIF {"$NEED_HP" == "TRUE" && "$ASKED_FOR_HEAL" == "FALSE"} {
            say Need HEAL;
            #var ASKED_FOR_HEAL TRUE;
        };
    };
} {10}

#alias {set-attacking}
{
    #variable {STATUS} {ATTACKING};
} {10}

#nop This is for a leader to heal a follower
#action {[%0 %1/%2H %3/%4M %5/%6V  %7 Align] %8 (Tank)}
{
    #if {"$FOLLOWING" == "TRUE"}
    {
        #return;
    };

    #math {HEALTH_PCT} {%1 / %2 * 1.0};

    #showme Partner HP: $HEALTH_PCT;

    #if {$HEALTH_PCT <= $HP_MIN_PCT && $MP > $COST_CRSR && "$CAN_HEAL" == "TRUE"}
    {
        crsr %8;
    }
}

#alias {check-loop}
{
    #if {"$LOOP" == "TRUE"}
    {
        start-looker;
    }
}

#action {[ Exits:}
{
	#if {"$LOOP" == "TRUE" && "$STATUS" == "READY"}
	{
        #delay {3} 
        {
            #if {"$LOOP" == "TRUE" && "$STATUS" == "READY"}
            {
                #showme ++++Walking++++;
                #path describe;
                #path walk;
                #variable STATUS MOVING;
                #format LAST_MOVE %T;
            };    
        };
	};
}


#if {($currenttime - $starttime) >= 60}
{
    #math {HOURLY_EXP} {$stats[exp] * 60 / ($currenttime - $starttime) * 60 / 1000};
};

#nop The {a} backlog needs to be put inside here
#nop simply because it will also be seen after the mobs.
#action {[%0/%1H %2/%3M %4/%5V XP:%6]} {    
    #showme $STATUS;

    #variable HP %0;
    #variable MP %2;
    #variable VP %4;
    
    #if {$FIRST_EXP == 0}
    {
        #variable FIRST_EXP %6;
    };
    #else {
        #format currenttime %T;
        #if {($currenttime - $starttime) >= 60} {
          #math {TOTAL_EXP} {$FIRST_EXP - %6};  
          #math {HOURLY_EXP} {$TOTAL_EXP / ($currenttime - $starttime) * 60 * 60 / 1000};
        };
    };

    #math {HP_PCT} {%0 / %1 * 1.0};
    #math {MP_PCT} {%2 / %3 * 1.0};
    #math {VP_PCT} {%4 / %5 * 1.0};

    #showme [$HP_PCT _ $MP_PCT _ $VP_PCT _ XP/HR(K): $HOURLY_EXP];

    #if {$VP_PCT < $VP_MIN_PCT && "$CAN_REJU" == "TRUE"}
    {
        reju
    };

    #if {%6 < $AT_XP_SWITCH_TO_LEVEL_GEAR && "$SWITCHED_LEVEL_GEAR" == "FALSE"}
    {
        con-gear;
        #var SWITCHED_LEVEL_GEAR TRUE;
        #2 drinkme;
        feedme;
    };

    #if {"$STATUS" != "HEALING" && "$FOLLOWING" == "TRUE"}
    {
        #if {$HP_PCT < $HP_MIN_PCT && $MP > $COST_CRSR && "$CAN_HEAL" == "TRUE"}
        {
            crsr;
            #variable STATUS HEALING;
            #bell
        };
    };
    #ELSEIF {"$STATUS" == "HEALING"} {#variable STATUS READY};

    #if {"$LOOP" == "FALSE" && "$KILL" == "FALSE"}
    {
        #return
    };

    #if {$HP_PCT < $HP_MIN_PCT} 
    {
        #variable NEED_HP TRUE;

        #if {$HP_PCT < $CRITICAL_HP_PCT && "$ASKED_FOR_HEAL" == "FALSE" }
        {
            say Need HEAL;
            #var ASKED_FOR_HEAL TRUE;
        };
        #elseif {"$STATUS" == "READY" || "$STATUS" == "MOVING"}
        {
            sleep
        };

    };
    #else 
    {
        #variable NEED_HP FALSE
    };

    #if {"$STATUS" != "ATTACKING" && "$STATUS" != "SLEEPING" && "$STATUS" != "HEALING"} 
    {
        #if {$HP_PCT < $HP_MIN_PCT || $MP_PCT < $MP_GBL_MIN_PCT || $VP_PCT < $VP_MIN_PCT} 
        {

            #if {$VP_PCT < $VP_MIN_PCT && "$CAN_REJU" == "TRUE"}
            {
                reju
            };
            #else
            {
                sleep
            };
        };
    };
    #elseif {"$STATUS" == "SLEEPING"}
    {

        #if {$HP_PCT == 1.0 && $MP_PCT > $MP_MIN_PCT && $VP_PCT > $VP_MIN_PCT}
        {
            wake
        };
    };
    #elseif {"$STATUS" != "HEALING"}
    { 
        #nop Leader or Follower heals itself;

        #if {$HP_PCT < $HP_MIN_PCT && $MP > $COST_CRSR && "$CAN_HEAL" == "TRUE"}
        {
            crsr;
            #variable STATUS HEALING;
        };
    };

}

#alias {rego}
{
    #showme Regoing...;
    #variable STATUS READY;
    #variable LOOP TRUE;
    #variable KILL TRUE;
    start-looker;
}

#alias {start-looker}
{
    #ticker {look-mover}
    {
        #if {"$STATUS" != "ATTACKING" && "$STATUS" != "BLESSING" && "$STATUS" != "SLEEPING"}
        {
            #showme Looking...;
            #var STATUS READY;
            look
        };
    } {5};
}

#alias {stop-looker}
{
    #unticker {look-mover};
    #variable STATUS READY;
} {6}

#alias {stop}
{
    #variable LOOP FALSE;
    #variable KILL FALSE;
    #unticker {move-max};
    stop-looker;
    #delay {2}
    {
        #variable {STATUS} {READY};
    }
}

#action {END OF PATH}
{
    stop;
    #if {"$AUTO_RESTART" == "TRUE"}
    {
       start $LAST_PATH;
    };
}

#alias {ready}
{
    #showme Ready...;
    #variable STATUS READY;
}
