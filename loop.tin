#read mobs.tin

#variable {LOOP} {FALSE}
#variable {NEED_HP} {FALSE}
#variable {NEED_MP} {FALSE}

#variable {HP} {0}
#variable {MP} {0}
#variable {VP} {0}

#variable {MP_MIN_PCT} {0.6}

#variable {FOLLOWING} {FALSE}
#variable {LEADING} {FALSE}

#action {That player is not here.}
{
    lll;
}

#nop This is a bandaid to fix a thread timing issue with the looker/mover
#ticker {statuser} 
{
    #if {"$STATUS" == "MOVING"}
    {
        lll;
    };
} 240;

#alias {a}
{
    #if {"$KILL" == "TRUE" && ("$STATUS" == "READY")}
    {
        #if {"$NEED_HP" != "TRUE" && "$NEED_MP" != "TRUE"}
        {
            set-attacking;
            kill %1;
            stop-looker;
        }
    };
} {10}

#alias {set-attacking}
{
    #variable STATUS ATTACKING;
} {10}

#nop This is for a leader to heal a follower
#action {[%0 %1/%2H %3/%4M %5/%6V  %7 Align] %8 (Tank)}
{
    #if {"$FOLLOWING" == "TRUE"}
    {
        #return;
    };

    #math {HEALTH_PCT} {%1 / %2 * 1.0};

    #showme Partner HP: $HEALTH_PCT;

    #if {$HEALTH_PCT <= $HP_MIN_PCT && $MP > $COST_HEAL && "$CAN_HEAL" == "TRUE"}
    {
        crsr %8;
    }
}

#alias {check-loop}
{
    #if {"$LOOP" == "TRUE"}
    {
        start-looker;
    }
}

#action {[ Exits:}
{
	#if {"$LOOP" == "TRUE" && "$STATUS" == "READY"}
	{
        #delay {2} 
        {
            #if {"$LOOP" == "TRUE" && "$STATUS" == "READY"}
            {
                #showme ++++Walking++++;
                #path describe;
                #path walk;
                #variable STATUS MOVING;
            };    
        };
	};
}

#action {[%0/%1H %2/%3M %4/%5V XP}
{
    #showme $STATUS;
    
    #variable HP %0;
    #variable MP %2;
    #variable VP %4;
    
    #math {HP_PCT} {%0 / %1 * 1.0};
    #math {MP_PCT} {%2 / %3 * 1.0};
    #math {VP_PCT} {%4 / %5 * 1.0};

    #showme [$HP_PCT _ $MP_PCT _ $VP_PCT];

    #if {$VP_PCT < $VP_MIN_PCT && "$CAN_REJU" == "TRUE"}
    {
        reju
    };

    #if {"$STATUS" != "HEALING" && "$FOLLOWING" == "TRUE"}
    {

        #if {$HP_PCT < $HP_MIN_PCT && $MP > $HEAL_COST && "$CAN_HEAL" == "TRUE"}
        {
            crsr;
            #variable STATUS HEALING;
            #bell
        };
    };

    #if {"$LOOP" == "FALSE" && "$KILL" == "FALSE"}
    {
        #return
    };

    #if {$HP_PCT < $HP_MIN_PCT} 
    {
        #variable NEED_HP TRUE
    };
    #else 
    {
        #variable NEED_HP FALSE
    };

    #if {"$STATUS" != "ATTACKING" && "$STATUS" != "SLEEPING"} 
    {
        #if {$HP_PCT < $HP_MIN_PCT || $MP_PCT < $MP_GBL_MIN_PCT || $VP_PCT < $VP_MIN_PCT} 
        {
            #if {$VP_PCT < $VP_MIN_PCT && "$CAN_REJU" == "TRUE"}
            {
                reju
            };
            #else
            {
                sleep
            };
        };
    };
    #elseif {"$STATUS" == "SLEEPING"}
    {
        #if {$HP_PCT == 1.0 && $MP_PCT > $MP_MIN_PCT && $VP_PCT > $VP_MIN_PCT}
        {
            wake
        };
    };
    #elseif {"$STATUS" != "HEALING"}
    {
        #if {$HP_PCT < $HP_MIN_PCT && $MP > $HEAL_COST && "$CAN_HEAL" == "TRUE"}
        {
            crsr;
            #variable STATUS HEALING;
        };
    };
}

#alias {lll}
{
    #variable STATUS READY;
    #variable LOOP TRUE;
    #variable KILL TRUE;

    start-looker;
}

#alias {lla}
{
    #variable STATUS READY;
    #variable LOOP TRUE;
    start-looker;
}

#alias {start-looker}
{
    #ticker {look-mover}
    {
        #if {"$STATUS" != "ATTACKING" && "$STATUS" != "BLESSING" && "$STATUS" != "SLEEPING"}
        {
            #showme Looking...;
            #var STATUS READY;
            look
        };
    } {5};
}

#alias {stop-looker}
{
    #unticker {look-mover};
    #variable STATUS READY;
} {6}

#alias {mmm}
{
    #variable LOOP FALSE;
    #variable KILL FALSE;
    #unticker {move-max};
    stop-looker;
    #delay {2}
    {
        #variable {STATUS} {READY};
    }
}

#action {END OF PATH}
{
    mmm;
    check-next;
}

#alias {check-next}
{
    #nop
}
